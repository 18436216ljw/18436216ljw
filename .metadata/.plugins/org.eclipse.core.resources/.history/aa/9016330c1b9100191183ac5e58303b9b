package yychatserver;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

import com.yychat.model.Message;
import com.yychat.model.User;

public class StartServer {
	public static HashMap hmSocket=new HashMap<String,Socket>();
	
	ServerSocket ss;
	String userName;
	String passWord;
	String userMessageType;
	Message mess;
	ObjectOutputStream oos;
	@SuppressWarnings("unchecked")
	public StartServer(){
		
		try {//捕获异常
			
			ss=new ServerSocket(3456);//设置1024以上的端口
			System.out.println("服务器启动，监听3456端口");
			while(true){
			Socket s=ss.accept();//接收客户端的连接请求
			System.out.println("连接成功:"+s);
		
		
			
			//接收User对象
			ObjectInputStream ois=new ObjectInputStream(s.getInputStream());
			User user=(User)ois.readObject();
			userName=user.getUserName();
			passWord=user.getPassWord();
			userMessageType=user.getUserMessageType();
			System.out.println(user.getUserName());
			System.out.println(user.getPassWord());
			mess=new Message();
				mess.setSender("Server");
				mess.setReceiver(userName);
				//使用数据库进行用户身份认证
				//1、加载驱动程序
				//YychatDbUtil.loadDriver();
				
				//Connection conn=yychatDbUtil.getConnection();
				
				//2、连接数据库
				//String url="jdbc:mysql://127.0.0.1:3306/yychat";
				//中文用户名必须用下面的url
				System.out.println(userMessageType);
				if(userMessageType.equals("USER_LOGIN")){
						boolean loginSuccess=yychatDbUtil.loginValidate(userName, passWord);
						//System.out.println("loginSuccess是"+loginSuccess);
					//密码验证
					//if(user.getPassWord().equals("123456")){//User.getPassWord()=="123456" 错误做法,判断对象相等用equals
						if(loginSuccess){
						//YychatDbUtil.getFriendString(userName);
						mess.setMessageType(Message.message_LoginSuccess);
						//String friendString=YychatDbUtil.getFriendString(userName);
						//String Signature=yychatDbUtil.getSignature(userName);
						//mess.setContent(friendString);
						//mess.setString(Signature);
						}else{
							mess.setMessageType(Message.message_LoginFailure);//"0"为验证不通过
						}
					
						sendMessage(s,mess);
						//System.out.println("已经发送mess："+mess);
					//if(user.getPassWord().equals("123456")){
						if(loginSuccess){
						//激活新上线用户图标1、在此处把指甲登陆成功的消息发送给前面登陆的用户
						mess.setMessageType(Message.message_NewOnlineFriend);
						mess.setSender("Server");
						mess.setContent(userName);
						//mess.setReceiver(receiver);
						
						Set onlineFriendSet=hmSocket.keySet();
						Iterator it=onlineFriendSet.iterator();
						String friendName;
						while(it.hasNext()){//向全部在线用户发送新用户上线的消息
							friendName=(String)it.next();
							mess.setReceiver(friendName);
							
							//Socket s1=(Socket)hmSocket.get(friendName);
							sendMessage(s,mess);
						}
						
						hmSocket.put(userName, s);
					new ServerReceiverThread(s).start();//就绪状态
					}
				} 
				if(user.getUserMessageType().equals("USER_REGISTER")){
					//对新注册用户进行查询,seekUserResult为ture表示有同名用户，false没有同名用户
					boolean seekUserResult=YychatDbUtil.seekUser(userName);
					//System.out.println(seekUserResult);
					if(seekUserResult){
						mess.setMessageType(Message.message_RegisterFailure);
					}else{
						//YychatDbUtil.addUser(userName,passWord);
						mess.setMessageType(Message.message_RegisterSuccess);
						yychatDbUtil.addUser(userName,passWord);
					}
					//如果没有同名用户，把新用户的名字和密码写到user表中
					sendMessage(s,mess);
					s.close();
				}
			}
			
				
			} catch (IOException | ClassNotFoundException e) {
			e.printStackTrace();//处理异常
		} 
	}

	public void sendMessage(Socket s,Message mess) throws IOException {
		oos=new ObjectOutputStream(s.getOutputStream());
		oos.writeObject(mess);
		
	}
}
