package com.yychatclient.control;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.HashMap;

import com.chatclient.view.ClientLogin;
import com.chatclient.view.FriendChatClient1;
import com.chatclient.view.FriendList;
import com.yychat.model.Message;

public class ClientReceiverThread extends Thread{
		
	private Socket s;//成员变量
	
	public ClientReceiverThread(Socket s) {
		this.s=s;
	}
	
public void run(){
	ObjectInputStream ois;
	while(true){
		try {	
					ois=new ObjectInputStream(s.getInputStream());
					Message mess=(Message)ois.readObject();//接收聊天信息
					String showMessage=mess.getSender()+"对"+mess.getReceiver()+"说:"+mess.getContent();
					System.out.println(showMessage);
					
					if(mess.getMessageType().equals(Message.message_Common)){
						
					
					//jta.append(showMessage+"\r\n");             
					//在好友界面friendchatclient1上显示聊天信息
					//1。如何得到好友聊天界面
					FriendChatClient1 friendChatClient1=(FriendChatClient1)FriendList.hmFriendChatClient1.get(mess.getReceiver()+"to"+mess.getSender());
					
				
					//2。再显示信息
					
					friendChatClient1.appendJta(showMessage);
					}
					
					if(mess.getMessageType().equals(Message.message_OnlineFriend)){
						
						//激活对应图标，首先要拿到好友列表对象
						FriendList friendList=(FriendList)ClientLogin.hmFriendList.get(mess.getReceiver());
						//激活对应图标
						friendList.setEnableFriendIcon(mess.getContent());
						
					}
					
			} 
					catch (IOException | ClassNotFoundException e) {

				e.printStackTrace();
				} 
			}
		
	}
}




public class ChatMessage {   
    private int imageViewPerson;//人物头像
    private long textViewTime;//显示的时间
    private String textViewHonour;//人物头衔
    private String textviewName;//人物昵称
    private String textViewInput;//说话内容
    private int type;//信息类型，是在左边显示还是右边显示。

    /*
    定义两个构造器，一个无参，一个传值。
     */
    public ChatMessage() {
    }
    public ChatMessage(int imageViewPerson, long textViewTime, String textViewHonour, String textviewName, String textViewInput) {
        this.imageViewPerson = imageViewPerson;
        this.textViewTime = textViewTime;
        this.textViewHonour = textViewHonour;
        this.textviewName = textviewName;
        this.textViewInput = textViewInput;
    }

    public int getType() {
        return type;
    }

    public void setType(int type) {
        this.type = type;
    }

    public int getImageViewPerson() {
        return imageViewPerson;
    }

    public void setImageViewPerson(int imageViewPerson) {
        this.imageViewPerson = imageViewPerson;
    }

    public long getTextViewTime() {
        return textViewTime;
    }

    public void setTextViewTime(long textViewTime) {
        this.textViewTime = textViewTime;
    }

    public String getTextViewHonour() {
        return textViewHonour;
    }

    public void setTextViewHonour(String textViewHonour) {
        this.textViewHonour = textViewHonour;
    }

    public String getTextviewName() {
        return textviewName;
    }

    public void setTextviewName(String textviewName) {
        this.textviewName = textviewName;
    }

    public String getTextViewInput() {
        return textViewInput;
    }

    public void setTextViewInput(String textViewInput) {
        this.textViewInput = textViewInput;
    }
}









